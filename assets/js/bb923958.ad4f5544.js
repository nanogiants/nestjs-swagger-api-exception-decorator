"use strict";(self.webpackChunkapiexception=self.webpackChunkapiexception||[]).push([[358],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(g,a(a({ref:t},l),{},{components:n})):r.createElement(g,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2493:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return d}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),a=["components"],s={title:"Built-in exceptions"},p=void 0,c={unversionedId:"gettingstarted/usage/simple",id:"gettingstarted/usage/simple",title:"Built-in exceptions",description:"Route methods",source:"@site/docs/gettingstarted/usage/simple.md",sourceDirName:"gettingstarted/usage",slug:"/gettingstarted/usage/simple",permalink:"/nestjs-swagger-api-exception-decorator/gettingstarted/usage/simple",editUrl:"https://github.com/nanogiants/nestjs-swagger-api-exception-decorator/edit/documentation/docs/gettingstarted/usage/simple.md",tags:[],version:"current",frontMatter:{title:"Built-in exceptions"},sidebar:"docs",previous:{title:"Installation",permalink:"/nestjs-swagger-api-exception-decorator/gettingstarted/installation"},next:{title:"Custom exceptions",permalink:"/nestjs-swagger-api-exception-decorator/gettingstarted/usage/custom"}},l=[{value:"Route methods",id:"route-methods",children:[],level:2},{value:"Class wide",id:"class-wide",children:[],level:2},{value:"Grouping",id:"grouping",children:[],level:2}],u={toc:l};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"route-methods"},"Route methods"),(0,i.kt)("p",null,"Simply import the decorator in your controller where you want to document the API exceptions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ApiException } from '@nanogiants/nestjs-swagger-api-exception-decorator';\n")),(0,i.kt)("p",null,"Then start decorating the controller routes where the API exceptions should be shown in the Swagger-UI. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { BadRequestException, UnauthorizedException } from '@nestjs/common';\nimport { ApiException } from '@nanogiants/nestjs-swagger-api-exception-decorator';\n\nexport class UserController {\n  @ApiOperation({ summary: 'Changes the users password' })\n  @ApiException(() => BadRequestException, { description: 'The password was invalid' })\n  @ApiException(() => UnauthorizedException, { description: 'The user is not authorized' })\n  @Patch('/password')\n  async changeUserPassword(@Res() res: Response): Promise<void> {\n    return res.sendStatus(HttpStatus.OK);\n  }\n}\n")),(0,i.kt)("h2",{id:"class-wide"},"Class wide"),(0,i.kt)("p",null,"You can also decorate classes with the ",(0,i.kt)("inlineCode",{parentName:"p"},"@ApiException")," decorator. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { BadRequestException, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { ApiException } from '@nanogiants/nestjs-swagger-api-exception-decorator';\n\n@ApiException(() => UnauthorizedException, { description: 'The user is not authorized' })\nexport class UserController {\n  @ApiOperation({ summary: 'Retrieves user information' })\n  @ApiException(() => NotFoundException, { description: 'The user was not found' })\n  @Get('/')\n  async getUserInfo(@Res() res: Response): Promise<void> {\n    return res.sendStatus(HttpStatus.OK);\n  }\n\n  @ApiOperation({ summary: 'Changes the users password' })\n  @ApiException(() => BadRequestException, { description: 'The password was invalid' })\n  @Patch('/password')\n  async changeUserPassword(@Res() res: Response): Promise<void> {\n    return res.sendStatus(HttpStatus.OK);\n  }\n\n  // @ApiException decorator will not be applied to this method!\n  @Get()\n  doSomething(@Res() res: Response) {\n    return res.sendStatus(HttpStatus.OK);\n  }\n}\n")),(0,i.kt)("p",null,"Now the ",(0,i.kt)("inlineCode",{parentName:"p"},"UnauthorizedException")," will be applied to all routes inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"UserController")," class."),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Decorators at class level will ",(0,i.kt)("strong",{parentName:"p"},"only")," be applied to controller routes which are decorated by ",(0,i.kt)("inlineCode",{parentName:"p"},"@ApiOperation")," decorator!"))),(0,i.kt)("h2",{id:"grouping"},"Grouping"),(0,i.kt)("p",null,"If your route could throw multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"BadRequestException")," instances, you may want to describe all exception cases which could occur. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { BadRequestException } from '@nestjs/common';\nimport { ApiException } from '@nanogiants/nestjs-swagger-api-exception-decorator';\n\nexport class UserController {\n  @ApiOperation({ summary: 'Changes the users password' })\n  @ApiException(() => BadRequestException, { description: 'The password was invalid' })\n  @ApiException(() => BadRequestException, { description: 'The new password does not match the requirements' })\n  @Patch('/password')\n  async changeUserPassword(@Res() res: Response): Promise<void> {\n    return res.sendStatus(HttpStatus.OK);\n  }\n}\n")),(0,i.kt)("p",null,"The decorator now shows multiple examples for the same status code including all possible descriptions. In Swagger-UI your exceptions examples will be consecutively numbered."))}d.isMDXComponent=!0}}]);