"use strict";(self.webpackChunkapiexception=self.webpackChunkapiexception||[]).push([[207],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,h=m["".concat(p,".").concat(u)]||m[u]||c[u]||i;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7480:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return d},default:function(){return m}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),o=["components"],l={title:"API Description"},p=void 0,s={unversionedId:"api",id:"api",title:"API Description",description:"This document covers all additional option properties which may be passed to the decorator.",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/nestjs-swagger-api-exception-decorator/api",editUrl:"https://github.com/nanogiants/nestjs-swagger-api-exception-decorator/edit/documentation/docs/api.md",tags:[],version:"current",frontMatter:{title:"API Description"},sidebar:"docs",previous:{title:"Templated exceptions",permalink:"/nestjs-swagger-api-exception-decorator/gettingstarted/usage/templated"},next:{title:"v1.2.0",permalink:"/nestjs-swagger-api-exception-decorator/releasenotes/v1.2.0"}},d=[{value:"Overview",id:"overview",children:[],level:2},{value:"Properties",id:"properties",children:[{value:"<code>template</code>",id:"template",children:[{value:"JSON object",id:"json-object",children:[],level:4},{value:"Swagger annotated class",id:"swagger-annotated-class",children:[],level:4}],level:3},{value:"<code>contentType</code>",id:"contenttype",children:[],level:3},{value:"<code>description</code>",id:"description",children:[],level:3},{value:"<code>messageSchema</code>",id:"messageschema",children:[],level:3},{value:"<code>enrichSchema</code>",id:"enrichschema",children:[],level:3},{value:"<code>type</code>",id:"type",children:[],level:3},{value:"<code>isArray</code>",id:"isarray",children:[],level:3},{value:"<code>requiredProperties</code>",id:"requiredproperties",children:[],level:3},{value:"<code>placeholders</code>",id:"placeholders",children:[],level:3}],level:2}],c={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This document covers all additional option properties which may be passed to the decorator."),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"interface Options {\n  template?: Record<string, unknown> | (() => Type<unknown>);\n  requiredProperties?: (keyof template)[];\n  contentType?: string;\n  description?: string;\n  messageSchema?: SchemaObject | ReferenceObject;\n  enrichSchema?: SchemaObject;\n  type?: () => string | Type<unknown>;\n  isArray?: boolean;\n  placeholders?: Record<string, Placeholder>;\n}\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("p",null,"All properties are optional."),(0,i.kt)("h3",{id:"template"},(0,i.kt)("inlineCode",{parentName:"h3"},"template")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Default"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  statusCode: '$status',\n  message: '$description',\n  error: '$error',\n}\n")),(0,i.kt)("p",null,"The template specifies the example value which will be shown in Swagger-UI."),(0,i.kt)("h4",{id:"json-object"},"JSON object"),(0,i.kt)("p",null,"You may pass an ",(0,i.kt)("inlineCode",{parentName:"p"},"Record")," containing key value pairs for your template including the following placeholders:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Placeholder"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"$status")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Resolved with the status code of the exception"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"404"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"$description")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Either resolved with the description passed as option or if no description is specified, the messages of the passed exceptions will be used"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"User was not found"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"$error")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The HTTP status code error. Please keep in mind, that if ",(0,i.kt)("inlineCode",{parentName:"td"},"error")," is undefined, ",(0,i.kt)("inlineCode",{parentName:"td"},"$description")," will be used as fallback."),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Not Found"))))),(0,i.kt)("p",null,"You may also specify your own placeholders with the ",(0,i.kt)("a",{parentName:"p",href:"#placeholders"},(0,i.kt)("inlineCode",{parentName:"a"},"placeholders"))," property."),(0,i.kt)("h4",{id:"swagger-annotated-class"},"Swagger annotated class"),(0,i.kt)("p",null,"Additionally you may pass any Swagger annotated class as ",(0,i.kt)("inlineCode",{parentName:"p"},"template"),"."),(0,i.kt)("p",null,"The following ",(0,i.kt)("inlineCode",{parentName:"p"},"@ApiProperty")," properties are used to generate an example value and schema:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"isArray")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"example")," if ",(0,i.kt)("inlineCode",{parentName:"li"},"isArray === false"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"example")," may contain any builtin or custom placeholder as described above"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[example]")," if ",(0,i.kt)("inlineCode",{parentName:"li"},"isArray === true"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Uses ",(0,i.kt)("inlineCode",{parentName:"li"},"example")," value inside an array automatically"),(0,i.kt)("li",{parentName:"ul"},"Prior ",(0,i.kt)("inlineCode",{parentName:"li"},"v1.4.4"),": Uses ",(0,i.kt)("inlineCode",{parentName:"li"},"examples")," which has been changed with ",(0,i.kt)("inlineCode",{parentName:"li"},"@nestjs/swagger@4.8.1")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"required"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If using any Swagger annotated class together with the ",(0,i.kt)("a",{parentName:"li",href:"#requiredproperties"},(0,i.kt)("inlineCode",{parentName:"a"},"requiredProperties")," option"),", the ",(0,i.kt)("inlineCode",{parentName:"li"},"requiredProperties")," array won't be overwritten."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"enum"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Please keep in mind that the first enum value are used as example value. If you want to override the example value, please use the ",(0,i.kt)("inlineCode",{parentName:"li"},"example")," property")))),(0,i.kt)("p",null,"If you need an additional ",(0,i.kt)("inlineCode",{parentName:"p"},"@ApiProperty")," property to be available to generate the example value and schema please ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nanogiants/nestjs-swagger-api-exception-decorator/issues/new"},"open an issue")," on GitHub."),(0,i.kt)("h3",{id:"contenttype"},(0,i.kt)("inlineCode",{parentName:"h3"},"contentType")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Default"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"application/json")),(0,i.kt)("p",null,"The content type property specifies the content type in which the example values will be shown."),(0,i.kt)("h3",{id:"description"},(0,i.kt)("inlineCode",{parentName:"h3"},"description")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Default"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")),(0,i.kt)("p",null,"The description specifies the example values message and the description shown in Swagger-UI. Use this property to overwrite the ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpException")," description."),(0,i.kt)("h3",{id:"messageschema"},(0,i.kt)("inlineCode",{parentName:"h3"},"messageSchema")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Default"),": The description passed to the decorator or message of the exception will be shown. See ",(0,i.kt)("a",{parentName:"p",href:"#description"},"description"),"."),(0,i.kt)("p",null,"The messageSchema property can be used to modify the message property only of the example value shown in Swagger-UI. It is also possible, to reference to existing schemas using the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nestjs/swagger/blob/master/lib/interfaces/open-api-spec.interface.ts#L193"},(0,i.kt)("inlineCode",{parentName:"a"},"ReferenceObject")),"."),(0,i.kt)("h3",{id:"enrichschema"},(0,i.kt)("inlineCode",{parentName:"h3"},"enrichSchema")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Default"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")),(0,i.kt)("p",null,"The enrichSchema property can be used to extend the schema auto-generated by the decorator or to overwrite existing keys, which have been generated by the decorator."),(0,i.kt)("h3",{id:"type"},(0,i.kt)("inlineCode",{parentName:"h3"},"type")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Default"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")),(0,i.kt)("p",null,"The type property can be used to specify already defined Swagger annotated classes."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Example"),":\n",(0,i.kt)("inlineCode",{parentName:"p"},"@ApiException(() => BadRequestException, { type: () => AnySwaggerAnnotatedClass })")),(0,i.kt)("p",null,"See our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nanogiants/nestjs-swagger-api-exception-decorator/blob/develop/demo/src/app.controller.ts#L70"},"demo project")," for a more detailed example."),(0,i.kt)("h3",{id:"isarray"},(0,i.kt)("inlineCode",{parentName:"h3"},"isArray")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Default"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")),(0,i.kt)("p",null,"The isArray property can only be used in combination with the ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," property. It allows you to let the type be shown as array in Swagger-UI."),(0,i.kt)("h3",{id:"requiredproperties"},(0,i.kt)("inlineCode",{parentName:"h3"},"requiredProperties")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Default"),": All first-level properties specified in ",(0,i.kt)("inlineCode",{parentName:"p"},"template"),"."),(0,i.kt)("p",null,"The requiredProperties property is used to mark specific properties as required in the generated schema."),(0,i.kt)("h3",{id:"placeholders"},(0,i.kt)("inlineCode",{parentName:"h3"},"placeholders")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Default"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")),(0,i.kt)("p",null,"The placeholders property can be used to create custom placeholders. This is useful if you want to use a custom exception template. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { buildPlaceholder, buildTemplatedApiExceptionDecorator } from '@nanogiants/nestjs-swagger-api-exception-decorator';\n\nconst TemplatedApiExceptionWithCustomPlaceholder = buildTemplatedApiExceptionDecorator(\n  {\n    [...]\n    clientCode: '$clientCode',\n  },\n  {\n    placeholders: {\n      clientCode: {\n        exceptionMatcher: () => BaseException,\n        resolver: (exception: BaseException) => exception.getClientCode(),\n      },\n    },\n  },\n);\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You may either pass the custom exception and resolver directly as in the example above, or use the ",(0,i.kt)("inlineCode",{parentName:"p"},"buildPlaceholder")," function. This function automatically infers the exception type with the first argument."),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  placeholders: {\n    clientCode: buildPlaceholder(\n      () => BaseException,\n      exception => exception.getClientCode(),\n    ),\n  },\n}\n")))),(0,i.kt)("p",null,"See our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nanogiants/nestjs-swagger-api-exception-decorator/blob/develop/demo/src/app.controller.ts#L45"},"demo project")," for a more detailed example."))}m.isMDXComponent=!0}}]);